{{> header}}
	{{> nav}}
	<div class="container">
		<div class="row-fluid">
			<h3> Hello, {{userProfile.displayName}}! You are currently signed in as {{userProfile.username}} on {{userProfile.provider}}! </h3>
		</div>
		<div class="row-fluid">
			<div class="panel panel-default">
				<header class="panel-heading">
					<h4>{{userProfile.displayName}} 
						<small>aka {{userProfile.username}}</small>
					</h4>
					<a href="/twit/json">User JSON</a>
				</header>
				<div class="panel-body">
					<div class="col-lg-12">
						<div class="col-lg-6">
							<div class="row-fluid">
								The number of people following you is <span id="followers">{{userProfile._json.followers_count}}</span>.
							</div>
							<div class="row-fluid">
								The number of people you are following is <span id="following">{{userProfile._json.friends_count}}</span>.
							</div>
							<div class="row-fluid text-center">
								<h2> Your Follower to Following ratio is:</h2>
								<h1 id="ratio"> </h1>
								<div class="progress progress-striped active">
								  	<div id="ratioBar" class="progress-bar"  role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
								  	</div>
								</div>
								<br/>
								<span id="displayMessage"> </span>
							</div>
						</div>
						<div class="col-lg-6">
							<div class="row-fluid">
								<h4> Your last status was on {{userProfile._json.status.created_at}} </h4>
							</div>
							<div class="row-fluid">
								You said:
							</div>
							<div class="row-fluid">
								<h3>
									<i> "<span id="userStatus">{{userProfile._json.status.text}}</span>"</i> 
								</h3>
							</div>
							<div class="row-fluid">
								<!-- <form method="post" action="/twit/search">
									<input id="coolSearch" type="hidden"> -->
									<form>
										<input name="randQuery" id="randQuery" type="hidden">
										<button class="btn btn-primary" id="randTwitSearch" href="#">
										Click here to do something cool with this status </button> 
									</form>
								<!-- </form> -->

								<div class="row-fluid">
									<h5>What it does:</h5>
									<span>
										When you click the button, a word from your last tweet will be selected at random.  It will then find other tweets that contain that word. WOW!
									</span>
									<h5>Known bugs</h5>
									<span>
										Sometimes, a url will accidentally be chosen.  If this happens, you will get NO RESULTS.  Simply just click the button again!
									</span>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<div id="tweet-results" class="modal fade">
		  <div class="modal-dialog">
		    <div class="modal-content">
		      <div class="modal-header">
		        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
		        <h4 id="queryTitle" class="modal-title"></h4>
		      </div>
		      <div class="modal-body">
		        <div id="tweets-container">
		        	<!-- tweets will display here -->
				</div>
		      </div>
		      <div class="modal-footer">
		        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
		      </div>
		    </div><!-- /.modal-content -->
		  </div><!-- /.modal-dialog -->
		</div><!-- /.modal -->
{{> globaljs}}
<script>
	$(document).ready( function (){

		// calculate follower:following ratio
		var numFollowers = $('#followers').text()
		var numFollowing = $('#following').text();

		var rawRatio = numFollowers/numFollowing;
		var ratio = Math.floor(rawRatio * 100) / 100;  // truncate
		var percentage = ratio * 100;
			percentage += '%';

		// area to append ratio
		var ratioDisplay = $('#ratio');
		var displayMessage = $('#displayMessage');

		// progressbar
		var bar = $('#ratioBar');

		// display messages
		var low = "Hmmm... That's a low score.  Have you gotten all of your friends to follow you?";
		var med = "Not bad! Try tapping into your Facebook friends if you haven't already.";
		var high = "Are you a celebrity?!";

		if( ratio < .5 ) {
			// number
			ratioDisplay.text(ratio);
			// message
			displayMessage.text(low);
			// bar color
			bar.addClass('progress-bar-danger');

		} else if ( ratio < 1 ) {
			ratioDisplay.text(ratio);
			displayMessage.text(med);
			bar.addClass('progress-bar-warning');
		} else {
			ratioDisplay.text(ratio);
			displayMessage.text(high);
			bar.addClass('progress-bar-success');
		}

		if (percentage > 100) {
			// prevent overflow
			percentage = 100;
		}

		// set the bar
		bar.attr('aria-valuenow', percentage);
		bar.css('width', percentage);

		// random twitter search

		$('#randTwitSearch').click( function (e) {
			e.preventDefault();
			// get the text of the status
			var status = $('#userStatus');
			var statusString = "";
				statusString += status.text();

			// convert the string into an array of words from the status
			var array = statusString.split(' ');


			var arrayFloor = array.length-1;
			// generate a random number between 0 and the size of the array
			var randInt = Math.floor((Math.random()*arrayFloor)+1);

			// do not search for urls/ allow slashes to be searched for
			if ( array[randInt].indexOf('/') != -1 ) {
				if ( array[randInt--] != null) {
					--randInt;
				} else {
					randInt = 0;
				}
			}

			console.log(statusString);
			console.log(randInt);
			console.log(array[randInt]);

			// select the word to randomly query
			var toQuery = array[randInt];

			// set the input value
			$('#randQuery').val(toQuery);

			console.log($('#randQuery').val());

			// AJAX call to get tweets matching the query
			var queryURL = '/twit/randTweets/';
				queryURL += toQuery;

			$.ajax({
				type: 'POST',
				data: toQuery,
				url: queryURL,
				dataType: 'json'
			}).done( function(response) {
				if (response.msg === '') {
					displayTweets( response );
					console.log(response);
				} else {
					alert(response.msg);
				}
			});


			function displayTweets( tweetsJSON ) {
				// show the modal
				$('#queryTitle').text("Showing the last 10 tweets that contain '" + tweetsJSON.query + "'");
				$('#tweet-results').modal('show')

				var numTweets = tweetsJSON.tweet.length;
				var tweetObject = [];

				// tweet html formatting for append() call
				var tweettron_open = "<div class='jumbotron'><div class='container'>";
				var tweetHTML_open = "<div class='row-fluid'>";
				var tweetHTML_user_open = "<h3>";
				var tweetHTML_user_close = "</h3>";
				var tweetHTML_time_open = "<small> On: ";
				var tweetHTML_time_close = "</small>";
				var tweetHTML_tweet_open = "<span><i>'";
				var tweetHTML_tweet_close = "'</i></span>";
				var tweetHTML_close = "</div>";
				var tweettron_close = "</div></div>";
				var completeHTML = '';

				for(var i = 0; i < numTweets; i++) {

					// put the response into a json for easier access
					var tempJSON = {};
					tempJSON.author = tweetsJSON.tweet[i].username;
					tempJSON.time = tweetsJSON.tweet[i].time; 
					tempJSON.tweet = tweetsJSON.tweet[i].tweet;

					console.log(tempJSON.author);
					// push objects to an array that can be easily accessed
					// tweetObject.push(tempJSON);

					// build the html to append to the DOM
					completeHTML += tweetHTML_open;
					completeHTML += tweettron_open;

					// user section
					completeHTML += tweetHTML_user_open;
					completeHTML += tempJSON.author;

					// time section
					completeHTML += tweetHTML_time_open;
					completeHTML += tempJSON.time;
					completeHTML += tweetHTML_time_close;
					completeHTML += tweetHTML_user_close;


					// tweet section
					completeHTML += tweetHTML_tweet_open;
					completeHTML += tempJSON.tweet;
					completeHTML += tweetHTML_tweet_close;

					completeHTML += tweettron_close;
					completeHTML += tweetHTML_close;


					$('#tweets-container').append(completeHTML);

					// reset html for next iteration
					completeHTML = '';
				}

					console.log(tweetObject);

			} 



		});

	});
</script>

{{> footer}}